[
    {
        "id": "692c798b6f9c61de",
        "type": "tab",
        "label": "Поток 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "be9f64fbc3682d16",
        "type": "tab",
        "label": "Поток 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "673990432da8bf57",
        "type": "group",
        "z": "692c798b6f9c61de",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "88f9361be756f961",
            "7bda40ae5d0419f4",
            "0b88f25bf185f363",
            "d6765f34883a6bc1",
            "8ceb1c5b5fb6e7d7",
            "02f2de19b7b337bc",
            "1cbac974e1dbb470",
            "5e83605c1e8b1345",
            "804d8ac17c0ee538",
            "dfbd635c1022b71c",
            "c5f7a3022f0a71d4"
        ],
        "x": 2954,
        "y": 1059,
        "w": 632,
        "h": 442
    },
    {
        "id": "a4444d4d6536d363",
        "type": "group",
        "z": "692c798b6f9c61de",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "5aa9ba6b290b2fba",
            "becebef23edcbbf9",
            "c83813488be715e7",
            "60fc553922b7b14e",
            "b6369bb4f44f1bb6",
            "3bc21ed43f4c6e09",
            "c8de1c77f62aa5e1",
            "71582f197379231e",
            "caa85d055fd1f0ed",
            "7bbd818e1ecdb3bd",
            "418b19355b65a1f0",
            "95c4e93990c94788",
            "2dbb2cf802cd2d99",
            "170a45b0bb68be76",
            "e765f3e65a86622c",
            "aab5cc2445afa1e9"
        ],
        "x": 1994,
        "y": 1479,
        "w": 932,
        "h": 402
    },
    {
        "id": "d2c54d759744b825",
        "type": "group",
        "z": "692c798b6f9c61de",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d83cd52bb6d220f3",
            "6a874cf39f52a41c",
            "44eead080f6ff893",
            "2c0e5a1f061ca6fb",
            "60f424913e84a261",
            "0ec93d1beaa5a9e4",
            "6e20a4e8faad6ec9",
            "3e7f179e8060b80f",
            "d804063004b4fdfc",
            "222ca6d9f33aad97",
            "a473206c5a0b1c96",
            "b2be50ecdbde2a5a",
            "81d3f4b0ee91b226",
            "b073da3186c96628",
            "e88a08b7fd7c4345",
            "e5a3acd7c9ec31f5"
        ],
        "x": 1994,
        "y": 1059,
        "w": 932,
        "h": 402
    },
    {
        "id": "497324ccb7313edb",
        "type": "group",
        "z": "692c798b6f9c61de",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0c769e6742acebb0",
            "a122ea34e40556e4",
            "ad3a558f7afdccbf",
            "58d2480b2eff322c",
            "7184e0269f48110f",
            "61dda110cb9d7f8a",
            "642df87e4871a1c4",
            "6c8acdd459e657eb",
            "9e5fe1c3fe6f0503",
            "1302f6d68dca2105",
            "2b2d85fbc2c145a5",
            "32d53427bced070c",
            "4c30f9b315530f2a",
            "160ef0c3c55613af",
            "95c8a2503541cab9",
            "6ad93d3e94e2fe69",
            "5c0f4a3dd94ecbbf",
            "1f7ea9be7c722e68",
            "d81bab586132c7e4",
            "881c61e409196bd8",
            "84cef9c2bb45ee64",
            "2f28a02598ca6e15",
            "6cc4dd7e4806e9e6",
            "8fecdfbd30a2545b",
            "aad987ee2a0c4f2c",
            "5e407515e8c6f3ed",
            "59ba84765a4f6c18",
            "e04d259dd35c690f",
            "d969e40c2e543dae",
            "a902fb928a850e75",
            "b34c7c3825b2f296",
            "62276b0a5748fef9",
            "2c9973e0b952c269",
            "e063be51f1201adf",
            "2027404e36d47db4",
            "7416ec0179370582",
            "86a634f89955d0c9",
            "03ca1b1fdfc39f2d",
            "fdf6aa2ba915be6d",
            "28a1c7a16938fbb3",
            "33c8b93809af5d71",
            "c3a71011f5973516",
            "583517f12510f63c",
            "4eec54e042c9d037",
            "3880a03920b6f99c",
            "9c089a6faed821bd",
            "a854989e94536e41",
            "bb1e67cbc6aec98f",
            "b4ff918b8b4b6bcd",
            "c2c2313264fe8ffb",
            "d5479d55326e18b2"
        ],
        "x": 34,
        "y": 219,
        "w": 2432,
        "h": 782
    },
    {
        "id": "79737e067a3af084",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://broker.emqx.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "64d879d816cdb063",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "11354ae062708b32",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b76cefdaf9bc6c8b",
        "type": "ui_tab",
        "name": "AIR-CR",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91a9ce4bbf4bb377",
        "type": "ui_group",
        "name": "Settings",
        "tab": "b76cefdaf9bc6c8b",
        "order": 4,
        "disp": false,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fc491a4cada0492f",
        "type": "ui_group",
        "name": "SIdebar",
        "tab": "b76cefdaf9bc6c8b",
        "order": 1,
        "disp": false,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "78fe50a055b65ca2",
        "type": "ui_group",
        "name": "Control",
        "tab": "b76cefdaf9bc6c8b",
        "order": 8,
        "disp": false,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "61a80ff8ccd60942",
        "type": "ui_group",
        "name": "Header",
        "tab": "b76cefdaf9bc6c8b",
        "order": 2,
        "disp": false,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "08691a1abdc449f7",
        "type": "ui_group",
        "name": "Connection",
        "tab": "b76cefdaf9bc6c8b",
        "order": 3,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c642776b64f7474d",
        "type": "ui_group",
        "name": "r0",
        "tab": "b76cefdaf9bc6c8b",
        "order": 5,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "01eefd96a559eaf3",
        "type": "ui_group",
        "name": "r1",
        "tab": "b76cefdaf9bc6c8b",
        "order": 6,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6cbd42c7b26f3143",
        "type": "ui_group",
        "name": "submit",
        "tab": "b76cefdaf9bc6c8b",
        "order": 7,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "523171b4c91e1d14",
        "type": "ui_group",
        "name": "schedule",
        "tab": "b76cefdaf9bc6c8b",
        "order": 9,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1930e8a4f993681",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "e7e16dbe30f6e04d",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "71c0eda8d94de799",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "ceb88fdb54e0d9f2",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "44c9217bceb30ec0",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "2c1f72eaad93e853",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "59cbfaebb9ba9f9a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 11,
        "width": 4,
        "height": 1
    },
    {
        "id": "9f93bbd21d464832",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "9ab799af8c888f05",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "8323abfabf52b1ba",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "26282e3bdd91f1d9",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "ad7ef51a982e0707",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "68e7c4a217512504",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 17,
        "width": 4,
        "height": 1
    },
    {
        "id": "78ff0d0555c2fd3e",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "07e0fbd8e5e6af63",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 19,
        "width": 4,
        "height": 1
    },
    {
        "id": "6de1be421983025a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 20,
        "width": 4,
        "height": 1
    },
    {
        "id": "6aecfb41a7834e25",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 21,
        "width": 4,
        "height": 1
    },
    {
        "id": "e7d672eb0b1a3348",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "28db81583bb39e9b",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "6beb4cdd8ccbba28",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "ba3a25faa0498c4d",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 25,
        "width": 4,
        "height": 1
    },
    {
        "id": "90ab373e3a79e957",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 26,
        "width": 4,
        "height": 1
    },
    {
        "id": "adec94a4d2864e4f",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 27,
        "width": 4,
        "height": 1
    },
    {
        "id": "e123042e0e784e60",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 28,
        "width": 4,
        "height": 1
    },
    {
        "id": "734219b1a60879d8",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 29,
        "width": 4,
        "height": 1
    },
    {
        "id": "3a858d47375e7b0a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 30,
        "width": 4,
        "height": 1
    },
    {
        "id": "bba8867b03015dc3",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 31,
        "width": 4,
        "height": 1
    },
    {
        "id": "3b326b8e8560c40c",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 32,
        "width": 4,
        "height": 1
    },
    {
        "id": "342f668225d2d97e",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 33,
        "width": 4,
        "height": 1
    },
    {
        "id": "bee88e81f286834c",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 34,
        "width": 4,
        "height": 1
    },
    {
        "id": "b6efb7037338b59d",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 35,
        "width": 4,
        "height": 1
    },
    {
        "id": "6d32f0ae6e7fb2af",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 36,
        "width": 4,
        "height": 1
    },
    {
        "id": "b47891c184990f2a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "7308aefd52921d43",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 38,
        "width": 4,
        "height": 1
    },
    {
        "id": "cd17cfb3e0594089",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 39,
        "width": 4,
        "height": 1
    },
    {
        "id": "08f696673d862d98",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 40,
        "width": 4,
        "height": 1
    },
    {
        "id": "a247afc72078c05f",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 41,
        "width": 4,
        "height": 1
    },
    {
        "id": "e1332f2e70e72cbf",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "fc491a4cada0492f",
        "order": 42,
        "width": 4,
        "height": 1
    },
    {
        "id": "db658f0ec4b0487c",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "08691a1abdc449f7",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "7cec69da546b74fb",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "08691a1abdc449f7",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "c13a58d87f385030",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "08691a1abdc449f7",
        "order": 10,
        "width": 30,
        "height": 1
    },
    {
        "id": "312231add5b36d31",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "08691a1abdc449f7",
        "order": 13,
        "width": 14,
        "height": 1
    },
    {
        "id": "4469bc01576ee49e",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "08691a1abdc449f7",
        "order": 15,
        "width": 7,
        "height": 1
    },
    {
        "id": "08757486719067c3",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 5,
        "width": 30,
        "height": 1
    },
    {
        "id": "62314611ce65a7d3",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 15,
        "width": 10,
        "height": 1
    },
    {
        "id": "3abfeddcef2206ab",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 16,
        "width": 10,
        "height": 1
    },
    {
        "id": "d7783423736e85d4",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 17,
        "width": 30,
        "height": 1
    },
    {
        "id": "0951048fe6e53ad7",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 21,
        "width": 10,
        "height": 1
    },
    {
        "id": "b6842669ff76d670",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 22,
        "width": 10,
        "height": 1
    },
    {
        "id": "b657a6ea49bc40e5",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 23,
        "width": 30,
        "height": 1
    },
    {
        "id": "ded1d784ddc34266",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "91a9ce4bbf4bb377",
        "order": 28,
        "width": 30,
        "height": 1
    },
    {
        "id": "d54eda907fa589d4",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "c642776b64f7474d",
        "order": 1,
        "width": 30,
        "height": 1
    },
    {
        "id": "123586d6788cf04a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "c642776b64f7474d",
        "order": 11,
        "width": 10,
        "height": 1
    },
    {
        "id": "09449f6ef1b6297a",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "c642776b64f7474d",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "f4fe0209e05384ca",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "01eefd96a559eaf3",
        "order": 1,
        "width": 30,
        "height": 1
    },
    {
        "id": "2b8d4dd4f2659a07",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "01eefd96a559eaf3",
        "order": 11,
        "width": 10,
        "height": 1
    },
    {
        "id": "957ab38177156361",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "01eefd96a559eaf3",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "3621acf39eab081b",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "6cbd42c7b26f3143",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "c14bbf5380d2d9d7",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "6cbd42c7b26f3143",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "e8486edbd3017e0f",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "78fe50a055b65ca2",
        "order": 3,
        "width": 16,
        "height": 1
    },
    {
        "id": "a95b0626a334dc21",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "78fe50a055b65ca2",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "9145b928bf5be980",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "78fe50a055b65ca2",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "ee49722555f7421b",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "78fe50a055b65ca2",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "4b383d4b79c9ee02",
        "type": "ui_spacer",
        "z": "692c798b6f9c61de",
        "name": "spacer",
        "group": "523171b4c91e1d14",
        "order": 3,
        "width": 24,
        "height": 1
    },
    {
        "id": "f35f7ebd59ad5459",
        "type": "ui_ui_control",
        "z": "692c798b6f9c61de",
        "name": "",
        "events": "change",
        "x": 3240,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ec7459b197b9c702",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "name": "Settings",
        "group": "fc491a4cada0492f",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "settings_btn",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AIR-CR_Control\",\"AIR-CR_Connection\",\"AIR-CR_Simple_settings\",\"AIR-CR_schedule\"],\"show\":[\"AIR-CR_Settings\",\"AIR-CR_r0\",\"AIR-CR_r1\",\"AIR-CR_submit\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2880,
        "y": 480,
        "wires": [
            [
                "f35f7ebd59ad5459"
            ]
        ]
    },
    {
        "id": "cc2c84ed43d311b3",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "name": "Control panel",
        "group": "fc491a4cada0492f",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Control panel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "control_btn",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AIR-CR_Settings\",\"AIR-CR_r1\",\"AIR-CR_r0\",\"AIR-CR_submit\",\"AIR-CR_Connection\",\"AIR-CR_schedule\"],\"show\":[\"AIR-CR_Control\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2870,
        "y": 440,
        "wires": [
            [
                "f35f7ebd59ad5459"
            ]
        ]
    },
    {
        "id": "6d7ac608b771c09f",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "dashboardInit",
        "func": "msg.payload = {}\n\nmsg.payload.group = {\n    \"hide\": [\"AIR-CR_Settings\", \"AIR-CR_Control\", \"AIR-CR_r0\", \"AIR-CR_r1\", \"AIR-CR_submit\", \"AIR-CR_schedule\"],\n    \"show\": [\"AIR-CR_Connection\"]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 280,
        "wires": [
            [
                "f35f7ebd59ad5459"
            ]
        ]
    },
    {
        "id": "88f9361be756f961",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "Forced Unlock",
        "group": "78fe50a055b65ca2",
        "order": 5,
        "width": 14,
        "height": 1,
        "passthru": false,
        "label": "Forced Unlock",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "open_btn",
        "icon": "",
        "payload": "unlocked",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3060,
        "y": 1200,
        "wires": [
            [
                "d6765f34883a6bc1"
            ]
        ]
    },
    {
        "id": "7bda40ae5d0419f4",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "Locked",
        "group": "78fe50a055b65ca2",
        "order": 8,
        "width": 14,
        "height": 1,
        "passthru": false,
        "label": "Locked",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "close_btn",
        "icon": "",
        "payload": "locked",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3040,
        "y": 1260,
        "wires": [
            [
                "d6765f34883a6bc1"
            ]
        ]
    },
    {
        "id": "0b88f25bf185f363",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "Credential",
        "group": "78fe50a055b65ca2",
        "order": 11,
        "width": 14,
        "height": 1,
        "passthru": false,
        "label": "Credential",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "creds_btn",
        "icon": "",
        "payload": "credential",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3050,
        "y": 1320,
        "wires": [
            [
                "d6765f34883a6bc1"
            ]
        ]
    },
    {
        "id": "d6765f34883a6bc1",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "sendMqttMessage",
        "func": "\nlet userCreds = global.get('userCreds');\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\nlet control_cpIdx = global.get('control_cpIdx');\n\n\nlet msgWrapper = {}\nmsgWrapper.operator = \"SetAccessMode\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();\n\nmsgWrapper.info = {}\nmsgWrapper.info.Control_point_idx = control_cpIdx\nmsgWrapper.info.Access_mode = msg.payload\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId', msgWrapper.message_id)\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3310,
        "y": 1260,
        "wires": [
            [
                "8ceb1c5b5fb6e7d7"
            ]
        ]
    },
    {
        "id": "8ceb1c5b5fb6e7d7",
        "type": "mqtt out",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79737e067a3af084",
        "x": 3510,
        "y": 1320,
        "wires": []
    },
    {
        "id": "02f2de19b7b337bc",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "Control_point_idx",
        "label": "Control_point_idx",
        "tooltip": "",
        "group": "78fe50a055b65ca2",
        "order": 2,
        "width": 14,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Control_point_idx",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 3070,
        "y": 1140,
        "wires": [
            [
                "1cbac974e1dbb470"
            ]
        ]
    },
    {
        "id": "1cbac974e1dbb470",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "setCpIdx",
        "func": "global.set('control_cpIdx', msg.payload)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5e83605c1e8b1345",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "Single Exit",
        "group": "78fe50a055b65ca2",
        "order": 6,
        "width": 14,
        "height": 1,
        "passthru": false,
        "label": "Single Exit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 3050,
        "y": 1400,
        "wires": [
            [
                "dfbd635c1022b71c"
            ]
        ]
    },
    {
        "id": "804d8ac17c0ee538",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "SingleEntry",
        "group": "78fe50a055b65ca2",
        "order": 9,
        "width": 14,
        "height": 1,
        "passthru": false,
        "label": "SIngle Entry",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 3050,
        "y": 1460,
        "wires": [
            [
                "dfbd635c1022b71c"
            ]
        ]
    },
    {
        "id": "dfbd635c1022b71c",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "name": "sendMqttMessage",
        "func": "let userCreds = global.get('userCreds');\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\nlet control_cpIdx = global.get('control_cpIdx');\n\n\nlet msgWrapper = {}\nmsgWrapper.operator = \"Single_pass\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();\n\nmsgWrapper.info = {}\nmsgWrapper.info.Control_point_idx = control_cpIdx\nmsgWrapper.info.Direction = msg.payload\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId', msgWrapper.message_id)\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3290,
        "y": 1400,
        "wires": [
            [
                "8ceb1c5b5fb6e7d7"
            ]
        ]
    },
    {
        "id": "bcb697e124c3a95e",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "name": "Connection options",
        "group": "fc491a4cada0492f",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Connection options",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AIR-CR_Settings\",\"AIR-CR_r0\",\"AIR-CR_r1\",\"AIR-CR_submit\",\"AIR-CR_Control\",\"AIR-CR_Simple_settings\",\"AIR-CR_schedule\"],\"show\":[\"AIR-CR_Connection\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2890,
        "y": 400,
        "wires": [
            [
                "f35f7ebd59ad5459"
            ]
        ]
    },
    {
        "id": "c5f7a3022f0a71d4",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "673990432da8bf57",
        "group": "78fe50a055b65ca2",
        "name": "Control panel",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #controlPanelHeader{\n        text-align: center;\n        color: #0094CE;\n        font-size: 30px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"controlPanelHeader\">\n    Control panel\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3050,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "0c769e6742acebb0",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Host",
        "label": "Host",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 2,
        "width": 8,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "host",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 750,
        "y": 740,
        "wires": [
            [
                "7184e0269f48110f"
            ]
        ]
    },
    {
        "id": "a122ea34e40556e4",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Port",
        "label": "Port",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 3,
        "width": 6,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "port",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 770,
        "y": 880,
        "wires": [
            [
                "7184e0269f48110f"
            ]
        ]
    },
    {
        "id": "ad3a558f7afdccbf",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Username",
        "label": "Username",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 5,
        "width": 8,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "username",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 770,
        "y": 920,
        "wires": [
            [
                "7184e0269f48110f"
            ]
        ]
    },
    {
        "id": "58d2480b2eff322c",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Password",
        "label": "Password",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 4,
        "width": 8,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "password",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 780,
        "y": 960,
        "wires": [
            [
                "7184e0269f48110f"
            ]
        ]
    },
    {
        "id": "7184e0269f48110f",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setMqttSettings",
        "func": "\n// initialise the counter to 0 if it doesn't exist already\nlet mqtt_settings = global.get('mqtt_settings') || {};\n\nmqtt_settings = Object.assign(mqtt_settings, { [msg.topic]: msg.payload })\n\nglobal.set('mqtt_settings', mqtt_settings)\n\n// msg.payload = inputSettings\n\nreturn mqtt_settings;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "61dda110cb9d7f8a",
        "type": "status",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "scope": [
            "9e5fe1c3fe6f0503"
        ],
        "x": 120,
        "y": 640,
        "wires": [
            [
                "642df87e4871a1c4",
                "84cef9c2bb45ee64"
            ]
        ]
    },
    {
        "id": "642df87e4871a1c4",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setEnabledStates",
        "func": "if (msg.status.text === \"start\") {\n    msg.enabled = true\n} else if (msg.status.text === \"node-red:common.status.connecting\") {\n    msg.enabled = false\n} else if (msg.status.text === \"node-red:common.status.connected\") {\n    msg.enabled = false\n} else if (msg.status.text === \"node-red:common.status.disconnected\") {\n    msg.enabled = true\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "0c769e6742acebb0",
                "a122ea34e40556e4",
                "ad3a558f7afdccbf",
                "58d2480b2eff322c",
                "5c0f4a3dd94ecbbf"
            ]
        ]
    },
    {
        "id": "6c8acdd459e657eb",
        "type": "ui_toast",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Ack info",
        "x": 1940,
        "y": 300,
        "wires": []
    },
    {
        "id": "9e5fe1c3fe6f0503",
        "type": "mqtt in",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "79737e067a3af084",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "4c30f9b315530f2a"
            ]
        ]
    },
    {
        "id": "1302f6d68dca2105",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Set device address",
        "group": "08691a1abdc449f7",
        "order": 14,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "Set device address",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 500,
        "wires": [
            [
                "2b2d85fbc2c145a5"
            ]
        ]
    },
    {
        "id": "2b2d85fbc2c145a5",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "subscribe",
        "func": "let tempUserCreds = RED.util.cloneMessage(global.get('tempUserCreds'))\nglobal.set('userCreds', tempUserCreds)\nlet globalTopic = tempUserCreds.location + \"/\" + tempUserCreds.device_id + \"/\"\nmsg.action = \"subscribe\"\nmsg.topic = globalTopic + \"#\"\n\n\n\nlet obj = {}\nobj.payload = {}\nobj.payload.deviceAddr = \"Device address: \" + tempUserCreds.location + \"/\" + tempUserCreds.device_id + \"/\"\n\nreturn [msg, obj]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 500,
        "wires": [
            [
                "9e5fe1c3fe6f0503"
            ],
            [
                "6ad93d3e94e2fe69"
            ]
        ]
    },
    {
        "id": "32d53427bced070c",
        "type": "ui_table",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "group": "78fe50a055b65ca2",
        "name": "",
        "order": 12,
        "width": 30,
        "height": 12,
        "columns": [
            {
                "field": "Group",
                "title": "Group",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Ctp_idx",
                "title": "Ctp_idx",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Event_id",
                "title": "Event_id",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Direction",
                "title": "Direction",
                "width": "7%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Key_id",
                "title": "Key_id",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Key_HEX",
                "title": "Key_HEX",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "time",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "gmt",
                "title": "gmt",
                "width": "7%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1930,
        "y": 260,
        "wires": []
    },
    {
        "id": "4c30f9b315530f2a",
        "type": "switch",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "property": "payload.operator",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Event",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SetAccessMode-Ack",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Single_pass-Ack",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SetDateTime-Ack",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SetCtpDoor-Ack",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SetRd-Ack",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1410,
        "y": 320,
        "wires": [
            [
                "160ef0c3c55613af"
            ],
            [
                "95c8a2503541cab9"
            ],
            [
                "881c61e409196bd8"
            ],
            [
                "4eec54e042c9d037"
            ],
            [
                "aad987ee2a0c4f2c"
            ],
            [
                "2c9973e0b952c269"
            ]
        ]
    },
    {
        "id": "160ef0c3c55613af",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleEvent",
        "func": "let eventList = {\n    \"1\": \"Access denied: Antipassback violation\",\n    \"2\": \"Access denied: A second cardholder is required\",\n    \"3\": \"Access denied: Denied by access rule\",\n    \"4\": \"Access denied: Max occupancy reached\",\n    \"5\": \"Access denied: Expired credential\",\n    \"6\": \"Access denied: First-person-in rule supervisor absent\",\n    \"7\": \"Access denied: Inactive cardholder\",\n    \"8\": \"Access denied: Interlock\",\n    \"9\": \"Access denied: Invalid PIN\",\n    \"10\": \"Access denied: Invalid RFID\",\n    \"11\": \"Access denied: Invalid BT PHONE\",\n    \"12\": \"Access denied: Invalid LINKEY\",\n    \"13\": \"Access denied: Invalid VIKEY\",\n    \"14\": \"Access denied: Lost credential\",\n    \"15\": \"Access denied: Stolen credential\",\n    \"16\": \"Access denied: Unknown credential\",\n    \"17\": \"Access denied: Out of schedule\",\n    \"18\": \"Antipassback violation\",\n    \"19\": \"Antipassback violation forgiven\",\n    \"20\": \"Access denied: Double credential requred \",\n    \"21\": \"Access denied: Double credential timeout\",\n    \"22\": \"Entry assumed\",\n    \"23\": \"Entry detected\",\n    \"24\": \"Access granted\",\n    \"25\": \"Entry\",\n    \"26\": \"Exit\",\n\n\n    \"116\": \"Door closed\",\n    \"117\": \"Door opened\",\n    \"118\": \"Door forced open\",\n    \"119\": \"Door open too long\",\n    \"120\": \"Request to exit\",\n    \"121\": \"Door manually unlocked\",\n    \"122\": \"Door manually locked\",\n    \"123\": \"Door manually Scheduled mode\",\n    \"124\": \"Door locked\",\n    \"125\": \"Door unlocked\"\n}\n\n\n\nfunction constructOutput(key) {\n    return key + \": \" + eventList[key]\n}\n\nfunction getFormattedTime(unixTime) {\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let d = new Date(unixTime * 1000);\n    let day = days[d.getDay()];\n    let hr = d.getHours();\n    let min = d.getMinutes();\n    if (min < 10) {\n        min = \"0\" + min;\n    }\n    let ampm = \"am\";\n    if (hr > 12) {\n        hr -= 12;\n        ampm = \"pm\";\n    }\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return day + \" \" + hr + \":\" + min + ampm + \" \" + date + \" \" + month + \" \" + year;\n}\n\n\nlet eventInfoWrapper = {}\nlet eventInfo = {}\n\neventInfo = msg.payload.info\neventInfo.Event_id = constructOutput(eventInfo.Event_id)\neventInfo.time = getFormattedTime(eventInfo.time)\n\neventInfoWrapper.payload = {}\neventInfoWrapper.payload.command = \"addData\"\neventInfoWrapper.payload.arguments = [eventInfo, true]\n\nreturn eventInfoWrapper;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 260,
        "wires": [
            [
                "32d53427bced070c"
            ]
        ]
    },
    {
        "id": "95c8a2503541cab9",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleSetAccessMode-Ack",
        "func": "let ackInfo = {}\nlet messageId = global.get(\"messageId\")\n\n\n\nif (messageId === msg.payload.message_id) {\n\n    if (msg.payload.result.errorNo === 0) {\n        ackInfo.topic = \"Success\"\n        ackInfo.payload = \"Done\"\n\n    } else {\n        ackInfo.topic = \"Error\"\n        ackInfo.payload = \"error\"\n    }\n}\n\nreturn ackInfo;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 300,
        "wires": [
            [
                "6c8acdd459e657eb"
            ]
        ]
    },
    {
        "id": "6ad93d3e94e2fe69",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "group": "61a80ff8ccd60942",
        "name": "Device address",
        "order": 1,
        "width": 18,
        "height": 1,
        "format": "<style>\n    #userCreds {\n        display: flex;\n        flex-direction: row;\n        font-size: 25px;\n    }\n\n</style>\n\n<div id=\"userCreds\">\n    <div>{{msg.payload.deviceAddr}}</div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "5c0f4a3dd94ecbbf",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Connect to MQTT",
        "group": "08691a1abdc449f7",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Connect to MQTT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"action\":\"connect\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "1f7ea9be7c722e68",
                "9c089a6faed821bd"
            ]
        ]
    },
    {
        "id": "1f7ea9be7c722e68",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleMqttBroker",
        "func": "let mqttSettings = global.get('mqtt_settings')\n\nif (msg.payload.action === \"connect\"){\n    msg.action = \"connect\"\n    msg.broker = {\n        broker: mqttSettings.host,\n        port: mqttSettings.port,\n        username: mqttSettings.username,\n        password: mqttSettings.password\n    }\n} else if (msg.payload.action === \"disconnect\"){\n    msg.action = \"disconnect\"\n    console.log(\"disconnect\")\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 300,
        "wires": [
            [
                "9e5fe1c3fe6f0503"
            ]
        ]
    },
    {
        "id": "d81bab586132c7e4",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Stop connection",
        "group": "08691a1abdc449f7",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Stop connection",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"action\":\"disconnect\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "1f7ea9be7c722e68"
            ]
        ]
    },
    {
        "id": "881c61e409196bd8",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleSingle_pass-Ack",
        "func": "let ackInfo = {}\nlet messageId = global.get(\"messageId\")\n\n\n\n\nif (messageId === msg.payload.message_id) {\n    if (msg.payload.result.errorNo === 0) {\n        ackInfo.topic = \"Success\"\n        ackInfo.payload = \"Done\"\n\n\n    } else {\n        ackInfo.topic = \"Error\"\n        ackInfo.payload = \"error\"\n\n    }\n}\n\nreturn ackInfo;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "6c8acdd459e657eb"
            ]
        ]
    },
    {
        "id": "84cef9c2bb45ee64",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "buildStatusMessage",
        "func": "let mqttSettings = global.get('mqtt_settings')\nlet message = {}\nmessage.payload = {}\n\nif (msg.status.text === \"node-red:common.status.connecting\") {\n    message.payload.connectionStatus = \"MQTT: Connecting...\"\n    msg.payload = \"Connecting to \" + mqttSettings.broker + \":\" + mqttSettings.port\n} else if (msg.status.text === \"node-red:common.status.connected\") {\n    message.payload.connectionStatus = \"MQTT: Connected to \" + mqttSettings.broker + \":\" + mqttSettings.port\n    msg.payload = \"Connected to \" + mqttSettings.broker + \":\" + mqttSettings.port\n} else if (msg.status.text === \"node-red:common.status.disconnected\") {\n    message.payload.connectionStatus = \"MQTT: Connection OFF\"\n    msg.payload = \"Mqtt disconnected\"\n}\n\nreturn [message, msg]\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 420,
        "wires": [
            [
                "6cc4dd7e4806e9e6"
            ],
            [
                "2f28a02598ca6e15"
            ]
        ]
    },
    {
        "id": "2f28a02598ca6e15",
        "type": "ui_toast",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 370,
        "y": 480,
        "wires": []
    },
    {
        "id": "6cc4dd7e4806e9e6",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "group": "61a80ff8ccd60942",
        "name": "Mqtt status",
        "order": 2,
        "width": 12,
        "height": 1,
        "format": "<style>\n    #mqttStatus {\n        display: flex;\n        flex-direction: row-reverse;\n        font-size: 25px;\n        display: flex;\n        margin-left: 5px;\n    }\n\n    #mqttStatus div {\n        margin-left: 20px;\n    }\n</style>\n\n<div id=\"mqttStatus\">\n    <div>{{msg.payload.connectionStatus}}</div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 290,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8fecdfbd30a2545b",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "group": "08691a1abdc449f7",
        "name": "Connection options",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #connectionHeader{\n        text-align: center;\n        color: #0094CE;\n        font-size: 30px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"connectionHeader\">\n    Connection options\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a9fc57cdad44cd14",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "sendMqttMessage",
        "func": "\nlet userCreds = global.get('userCreds');\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\n\nlet msgWrapper = {}\nmsgWrapper.operator = \"SetCtpDoor\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();;\nmsgWrapper.info = Object.assign(global.get('device_set_idxs'), global.get('stpDoorSet'))\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId', msgWrapper.message_id)\n\nlet ackSubtopic = {}\nackSubtopic.action = \"subscribe\"\nackSubtopic.topic = globalTopic + \"Ack\" + \"/\"\n\nreturn [msg, ackSubtopic]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 1680,
        "wires": [
            [
                "689eaeb65ca4fba4"
            ]
        ]
    },
    {
        "id": "940bef210d3fe68f",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "name": "",
        "group": "6cbd42c7b26f3143",
        "order": 2,
        "width": 20,
        "height": 1,
        "passthru": false,
        "label": "Submit device settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3080,
        "y": 1560,
        "wires": [
            [
                "a9fc57cdad44cd14"
            ]
        ]
    },
    {
        "id": "689eaeb65ca4fba4",
        "type": "mqtt out",
        "z": "692c798b6f9c61de",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79737e067a3af084",
        "x": 3390,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5aa9ba6b290b2fba",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "d": true,
        "g": "a4444d4d6536d363",
        "name": "Rd_idx",
        "label": "Rd_idx",
        "tooltip": "",
        "group": "c642776b64f7474d",
        "order": 4,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Rd_idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2500,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "becebef23edcbbf9",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "d": true,
        "g": "a4444d4d6536d363",
        "name": "Control_point_idx_DUMMY",
        "label": "Control_point_idx",
        "tooltip": "",
        "group": "c642776b64f7474d",
        "order": 3,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Control_point_idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2440,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "c83813488be715e7",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "Direction (Rd_Direction)",
        "label": "Direction (Rd_Direction)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 5,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Entry",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Exit",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Direction",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2450,
        "y": 1680,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "60fc553922b7b14e",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": " Reverse byte order (Rd_Key_endian)",
        "label": " Reverse byte order (Rd_Key_endian)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 8,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ON",
                "value": true,
                "type": "bool"
            },
            {
                "label": "OFF",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Rd_Key_endian",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2410,
        "y": 1720,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "b6369bb4f44f1bb6",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "Buzzer (Rd_beep)",
        "label": "Buzzer (Rd_beep)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 6,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "On",
                "value": true,
                "type": "bool"
            },
            {
                "label": "Off",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Rd_beep",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2530,
        "y": 1760,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "3bc21ed43f4c6e09",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "Wiegand protocol type (Rd_Wg_type)",
        "label": "Wiegand protocol type (Rd_Wg_type)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 7,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Wiegand 4",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Wiegand 8",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Wiegand 26",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Wiegand 34",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Wiegand 37",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Wiegand 40",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Wiegand 42",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Wg_type",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2570,
        "y": 1800,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "c8de1c77f62aa5e1",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "SetRd0",
        "func": "let rdSet = global.get('rd_0_set') || {};\nrdSet = Object.assign(rdSet, { [msg.topic]: msg.payload })\nglobal.set('rd_0_set', rdSet)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "71582f197379231e",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "group": "c642776b64f7474d",
        "name": "Reader 1 settings",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #reader_1{\n        text-align: left;\n        color: green;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"reader_1\">\n    Reader 1 settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2530,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "caa85d055fd1f0ed",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 2250,
        "y": 1640,
        "wires": [
            [
                "7bbd818e1ecdb3bd"
            ]
        ]
    },
    {
        "id": "7bbd818e1ecdb3bd",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "Reader location (Rd_opt)",
        "label": "Reader location (Rd_opt)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 9,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ACU",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_opt",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2450,
        "y": 1640,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "418b19355b65a1f0",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2250,
        "y": 1680,
        "wires": [
            [
                "c83813488be715e7"
            ]
        ]
    },
    {
        "id": "95c4e93990c94788",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2110,
        "y": 1720,
        "wires": [
            [
                "60fc553922b7b14e"
            ]
        ]
    },
    {
        "id": "2dbb2cf802cd2d99",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2110,
        "y": 1760,
        "wires": [
            [
                "b6369bb4f44f1bb6"
            ]
        ]
    },
    {
        "id": "170a45b0bb68be76",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 2110,
        "y": 1800,
        "wires": [
            [
                "3bc21ed43f4c6e09"
            ]
        ]
    },
    {
        "id": "e765f3e65a86622c",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2090,
        "y": 1840,
        "wires": [
            [
                "aab5cc2445afa1e9"
            ]
        ]
    },
    {
        "id": "aab5cc2445afa1e9",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "a4444d4d6536d363",
        "name": "Wiegand port (Rd_Wg_idx)",
        "label": "Wiegand port (Rd_Wg_idx)",
        "tooltip": "",
        "place": "Select option",
        "group": "c642776b64f7474d",
        "order": 10,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Internal",
                "value": 1,
                "type": "num"
            },
            {
                "label": "External",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Wg_idx",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2360,
        "y": 1840,
        "wires": [
            [
                "c8de1c77f62aa5e1"
            ]
        ]
    },
    {
        "id": "d83cd52bb6d220f3",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "d": true,
        "g": "d2c54d759744b825",
        "name": "Rd_idx",
        "label": "Rd_idx",
        "tooltip": "",
        "group": "01eefd96a559eaf3",
        "order": 4,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Rd_idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2500,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "6a874cf39f52a41c",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "d": true,
        "g": "d2c54d759744b825",
        "name": "Control_point_idx_DUMMY",
        "label": "Control_point_idx",
        "tooltip": "",
        "group": "01eefd96a559eaf3",
        "order": 3,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Control_point_idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2440,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "44eead080f6ff893",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "Direction (Rd_Direction)",
        "label": "Direction (Rd_Direction)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 5,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Entry",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Exit",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Direction",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2450,
        "y": 1260,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "2c0e5a1f061ca6fb",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": " Reverse byte order (Rd_Key_endian)",
        "label": " Reverse byte order (Rd_Key_endian)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 8,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ON",
                "value": true,
                "type": "bool"
            },
            {
                "label": "OFF",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Rd_Key_endian",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2410,
        "y": 1300,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "60f424913e84a261",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "Buzzer (Rd_beep)",
        "label": "Buzzer (Rd_beep)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 6,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "On",
                "value": true,
                "type": "bool"
            },
            {
                "label": "Off",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Rd_beep",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2470,
        "y": 1340,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "0ec93d1beaa5a9e4",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "Wiegand protocol type (Rd_Wg_type)",
        "label": "Wiegand protocol type (Rd_Wg_type)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 7,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Wiegand 4",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Wiegand 8",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Wiegand 26",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Wiegand 34",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Wiegand 37",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Wiegand 40",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Wiegand 42",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Wg_type",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2410,
        "y": 1380,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "6e20a4e8faad6ec9",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "SetRd1",
        "func": "let rdSet = global.get('rd_1_set') || {};\nrdSet = Object.assign(rdSet, { [msg.topic]: msg.payload })\nglobal.set('rd_1_set', rdSet)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3e7f179e8060b80f",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "group": "01eefd96a559eaf3",
        "name": "Reader 2 settings",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #reader_2{\n        text-align: left;\n        color: green;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"reader_2\">\n    Reader 2 settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2530,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d804063004b4fdfc",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 2250,
        "y": 1220,
        "wires": [
            [
                "222ca6d9f33aad97"
            ]
        ]
    },
    {
        "id": "222ca6d9f33aad97",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "Reader location (Rd_opt)",
        "label": "Reader location (Rd_opt)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 9,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ACU",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_opt",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2450,
        "y": 1220,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "a473206c5a0b1c96",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2250,
        "y": 1260,
        "wires": [
            [
                "44eead080f6ff893"
            ]
        ]
    },
    {
        "id": "b2be50ecdbde2a5a",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2110,
        "y": 1300,
        "wires": [
            [
                "2c0e5a1f061ca6fb"
            ]
        ]
    },
    {
        "id": "81d3f4b0ee91b226",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2110,
        "y": 1340,
        "wires": [
            [
                "60f424913e84a261"
            ]
        ]
    },
    {
        "id": "b073da3186c96628",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 2110,
        "y": 1380,
        "wires": [
            [
                "0ec93d1beaa5a9e4"
            ]
        ]
    },
    {
        "id": "e88a08b7fd7c4345",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2090,
        "y": 1420,
        "wires": [
            [
                "e5a3acd7c9ec31f5"
            ]
        ]
    },
    {
        "id": "e5a3acd7c9ec31f5",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "g": "d2c54d759744b825",
        "name": "Wiegand port (Rd_Wg_idx)",
        "label": "Wiegand port (Rd_Wg_idx)",
        "tooltip": "",
        "place": "Select option",
        "group": "01eefd96a559eaf3",
        "order": 10,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Internal",
                "value": 1,
                "type": "num"
            },
            {
                "label": "External",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Rd_Wg_idx",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 2380,
        "y": 1420,
        "wires": [
            [
                "6e20a4e8faad6ec9"
            ]
        ]
    },
    {
        "id": "aad987ee2a0c4f2c",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleSetCtpDoor-Ack",
        "func": "let messageId = global.get(\"messageId\")\n\nif (messageId === msg.payload.message_id) {\n    let ackInfo = {}\n    if (msg.payload.result.errorNo === 0) {\n\n        ackInfo.result = \"success\"\n        ackInfo.payload = \"Done\"\n    } else {\n\n        ackInfo.result = \"error\"\n        ackInfo.payload = \"error\"\n    }\n    return ackInfo;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 420,
        "wires": [
            [
                "d969e40c2e543dae"
            ]
        ]
    },
    {
        "id": "5e407515e8c6f3ed",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "status.text",
                "v": "start",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "642df87e4871a1c4"
            ]
        ]
    },
    {
        "id": "59ba84765a4f6c18",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1883",
        "payloadType": "num",
        "x": 730,
        "y": 820,
        "wires": [
            [
                "a122ea34e40556e4"
            ]
        ]
    },
    {
        "id": "e04d259dd35c690f",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "broker.emqx.io",
        "payloadType": "str",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "0c769e6742acebb0"
            ]
        ]
    },
    {
        "id": "d969e40c2e543dae",
        "type": "switch",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 560,
        "wires": [
            [
                "b34c7c3825b2f296"
            ],
            [
                "a902fb928a850e75"
            ]
        ]
    },
    {
        "id": "a902fb928a850e75",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setReader1",
        "func": "\nlet userCreds = global.get('userCreds');\nlet device_set_idxs = global.get('device_set_idxs');\n\n\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\nlet msgWrapper = {}\nmsgWrapper.operator = \"SetRd\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();\nmsgWrapper.info = global.get('rd_0_set');\n\nmsgWrapper.info.Rd_idx = device_set_idxs.Rd0_idx\nmsgWrapper.info.Control_point_idx = device_set_idxs.Control_point_idx\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId_rd_0', msgWrapper.message_id)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 560,
        "wires": [
            [
                "62276b0a5748fef9"
            ]
        ]
    },
    {
        "id": "a607e57b9c8d8cdd",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "SetCtpDoor",
        "func": "let door_settings = global.get('door_settings') || {};\ndoor_settings = Object.assign(door_settings, {[msg.topic]:msg.payload})\nglobal.set('door_settings', door_settings)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "84d7a118ddd9842f",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Door sensor condition (Door_sens_Condition)",
        "label": "Door sensor condition (Door_sens_Condition)",
        "tooltip": "",
        "place": "",
        "group": "91a9ce4bbf4bb377",
        "order": 9,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Open",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Door_sens_Condition",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 880,
        "y": 1420,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "5876e97090ffded2",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "Control point index (Control_point_idx)",
        "label": "Control point index (Control_point_idx):",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 2,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Control_point_idx",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "5c869c44f8db9da9"
            ]
        ]
    },
    {
        "id": "4a42fef97bd379c2",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Door lock mode (Door_Lock_mode)",
        "label": "Door lock mode (Door_Lock_mode)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 10,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "trigger",
                "value": 0,
                "type": "num"
            },
            {
                "label": "impulse",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Door_Lock_mode",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 920,
        "y": 1660,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "297191ec56ab0272",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Door lock type (Door_Lock_type)",
        "label": "Door lock type (Door_Lock_type)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 13,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "NO (Normal opened)",
                "value": 0,
                "type": "num"
            },
            {
                "label": "NC (Normal closed)",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Door_Lock_type",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 920,
        "y": 1700,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "d8697b4c53aa26a1",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "Impulse duration (sec) (Door_Lock_puls)",
        "label": "Impulse duration (sec) (Door_Lock_puls):",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 11,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Door_Lock_puls",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 900,
        "y": 1740,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "d0c523e32a8ea14f",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "Hold duration, sec (Door_Delay)",
        "label": "Hold duration, sec (Door_Delay):",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 12,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Door_Delay",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 930,
        "y": 1780,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "1dc6ecb687b4c702",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Button condition (Button_rex_Condition)",
        "label": "Button condition (Button_rex_Condition)",
        "tooltip": "",
        "place": "Select button condition",
        "group": "91a9ce4bbf4bb377",
        "order": 27,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Open",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Button_rex_Condition",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 900,
        "y": 1540,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "4d74c64a6d551fbf",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "Reader 2 index (Rd1_idx)",
        "label": "Reader 2 index (Rd1_idx):",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 4,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Rd1_idx",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 1030,
        "y": 1240,
        "wires": [
            [
                "5c869c44f8db9da9"
            ]
        ]
    },
    {
        "id": "c195fb1af7d90e90",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "91a9ce4bbf4bb377",
        "name": "CP Settings label",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #CP_Header{\n        text-align: left;\n        color: #0094CE;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"CP_Header\">\n    Control point settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1730,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "3c691a45025ba009",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "Reader 1 index (Rd0_idx)",
        "label": "Reader 1 index (Rd0_idx):",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 3,
        "width": 10,
        "height": 2,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "Rd0_idx",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 1030,
        "y": 1200,
        "wires": [
            [
                "5c869c44f8db9da9"
            ]
        ]
    },
    {
        "id": "fac062210ac59294",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "8d0f58b9725145dc",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Door Sensor Input Location (Door_sens_opt)",
        "label": "Door sensor input location (Door_sens_opt)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 7,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ACU",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Door_sens_opt",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 890,
        "y": 1340,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "c92d749c3d3c71a5",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "061aecc325f2ccf3",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Input index for door sensor (Door_sens_idx)",
        "label": "Input index for door sensor (Door_sens_idx)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 8,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Pink",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Blue",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Door_sens_idx",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 890,
        "y": 1380,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "963ed93528cda57e",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "d3a133d00b340e1b",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b2474e59834ac54b",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Input index for exit button (Button_rex_idx)",
        "label": "Input index for exit button (Button_rex_idx)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 26,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Pink",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Blue",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Button_rex_idx",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "5eeae1b2e2b3c814",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "bff2a475aa26be41",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "00ecd6dbee19221f",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Lock relay location (Lock_Relay_opt)",
        "label": "Lock relay location (Lock_Relay_opt)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 20,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ACU",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Lock_Relay_opt",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 910,
        "y": 1580,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "84b05a9496fc7da5",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "9511360cabc09665",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Lock relay index (Lock_Relay_idx)",
        "label": "Lock relay index (Lock_Relay_idx)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 19,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Grey",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Lock_Relay_idx",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 920,
        "y": 1620,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "ca47d465a6b99a63",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "9d19323eaf34876e",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "1ae3d7c290a17078",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "e4e36f0ec9287fcb",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.2",
        "payloadType": "num",
        "x": 110,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "3984a6135d0cec25",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 110,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b083bea11642642c",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Autolock (Door_Sens_Autolock)",
        "label": "Autolock (Door_Sens_Autolock)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 14,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ON",
                "value": true,
                "type": "bool"
            },
            {
                "label": "OFF",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Door_Sens_Autolock",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 930,
        "y": 1820,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "86ed6e6d340e0de2",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "1decd6fb7be79a57",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Timezone (tz)",
        "label": "Timezone (tz)",
        "tooltip": "",
        "place": "Select timezone",
        "group": "91a9ce4bbf4bb377",
        "order": 31,
        "width": 20,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "(UTC-12:00) International Date Line West",
                "value": "<-12>12",
                "type": "str"
            },
            {
                "label": "(UTC-11:00) Coordinated Universal Time-11",
                "value": "SST11",
                "type": "str"
            },
            {
                "label": "(UTC-10:00) Aleutian Islands, Hawaii",
                "value": "HST10",
                "type": "str"
            },
            {
                "label": "(UTC-09:00) Alaska",
                "value": "<-09>9",
                "type": "str"
            },
            {
                "label": "(UTC-08:00) Pacific Time (US & Canada)",
                "value": "PST8PDT,M3.2.0,M11.1.0",
                "type": "str"
            },
            {
                "label": "(UTC-07:00) Chihuahua, La Paz, Mazatlan, Arizona",
                "value": "MST7MDT,M4.1.0,M10.5.0",
                "type": "str"
            },
            {
                "label": "(UTC-06:00) Guadalajara, Mexico City, Monterrey, Saskatchewan, Easter Island",
                "value": "CST6CDT,M4.1.0,M10.5.0",
                "type": "str"
            },
            {
                "label": "(UTC-05:00) Bogota, Lima, Quito, Rio Branco, Chetumal, Haiti, Havana",
                "value": "<-05>5",
                "type": "str"
            },
            {
                "label": "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",
                "value": "<-04>4",
                "type": "str"
            },
            {
                "label": "(UTC-03:00) Araguaina, Brasilia, Cayenne, Fortaleza, Salvador",
                "value": "<-03>3",
                "type": "str"
            },
            {
                "label": "(UTC-02:00) Mid-Atlantic - Old",
                "value": "<-02>2",
                "type": "str"
            },
            {
                "label": "(UTC-01:00) Azores",
                "value": "<-01>1<+00>,M3.5.0/0,M10.5.0/1",
                "type": "str"
            },
            {
                "label": "(UTC+00:00) Dublin, Edinburgh, Lisbon, London",
                "value": "GMT0",
                "type": "str"
            },
            {
                "label": "(UTC+01:00) Amsterdam, Berlin, Budapest, Ljubljana, Prague, Brussels, Copenhagen, Madrid, Paris",
                "value": "CET-1CEST,M3.5.0,M10.5.0/3",
                "type": "str"
            },
            {
                "label": "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius, Jerusalem, Kaliningrad, Tripoli",
                "value": "EET-2EEST,M3.5.0/3,M10.5.0/4",
                "type": "str"
            },
            {
                "label": "(UTC+03:00) Kuwait, Riyadh, Baghdad, Istanbul, Minsk, Moscow, St. Petersburg, Volgograd",
                "value": "MSK-3",
                "type": "str"
            },
            {
                "label": "(UTC+03:30) Tehran",
                "value": "<+0330>-3:30<+0430>,J79/24,J263/24",
                "type": "str"
            },
            {
                "label": "(UTC+04:00) Abu Dhabi, Muscat, Astrakhan, Ulyanovsk, Baku, Izhevsk, Samara",
                "value": "<+04>-4",
                "type": "str"
            },
            {
                "label": "(UTC+04:30) Kabul",
                "value": "<+0430>-4:30",
                "type": "str"
            },
            {
                "label": "(UTC+05:00) Ashgabat, Tashkent, Ekaterinburg, Islamabad, Karachi",
                "value": "PKT-5",
                "type": "str"
            },
            {
                "label": "(UTC+06:00) Astana, Dhaka, Omsk",
                "value": "<+06>-6",
                "type": "str"
            },
            {
                "label": "(UTC+07:00) Bangkok, Hanoi, Jakarta, Barnaul, Gorno-Altaysk, Krasnoyarsk, Novosibirsk",
                "value": "<+07>-7",
                "type": "str"
            },
            {
                "label": "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi, Irkutsk, Kuala Lumpur, Singapore",
                "value": "HKT-8",
                "type": "str"
            },
            {
                "label": "(UTC+09:00) Chita, Osaka, Sapporo, Tokyo, Seoul, Yakutsk",
                "value": "JST-9",
                "type": "str"
            },
            {
                "label": "(UTC+09:30) Adelaide, Darwin",
                "value": "ACST-9:30",
                "type": "str"
            },
            {
                "label": "(UTC+10:00) Brisbane, Canberra, Melbourne, Sydney, Vladivostok",
                "value": "<+10>-10",
                "type": "str"
            },
            {
                "label": "(UTC+11:00) Bougainville Island, Chokurdakh, Magadan, Norfolk Island, Sakhalin",
                "value": "<+11>-11",
                "type": "str"
            },
            {
                "label": "(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky, Auckland, Wellington",
                "value": "NZST-12NZDT,M9.5.0,M4.1.0/3",
                "type": "str"
            },
            {
                "label": "(UTC+13:00) Nuku'alofa, Samoa",
                "value": "<+13>-13",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "tz",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 680,
        "y": 2040,
        "wires": [
            [
                "ddab9916254d4a0e"
            ]
        ]
    },
    {
        "id": "ddab9916254d4a0e",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "setDT",
        "func": "let time_settings = global.get('time_settings') || {};\ntime_settings = Object.assign(time_settings, { [msg.topic]: msg.payload })\nglobal.set('time_settings', time_settings)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "ebf4caecba2c3b0f",
        "type": "ui_switch",
        "z": "692c798b6f9c61de",
        "name": "Use DST/GTM (DST_GMT)",
        "label": "Use DST/GTM (DST_GMT)",
        "tooltip": "",
        "group": "91a9ce4bbf4bb377",
        "order": 30,
        "width": 10,
        "height": 2,
        "passthru": true,
        "decouple": "false",
        "topic": "DST_GMT",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "dropdown_input",
        "x": 640,
        "y": 2000,
        "wires": [
            [
                "ddab9916254d4a0e"
            ]
        ]
    },
    {
        "id": "5dae369f8feb1f2b",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 2000,
        "wires": [
            [
                "ebf4caecba2c3b0f"
            ]
        ]
    },
    {
        "id": "b21a19bb0acbfa9c",
        "type": "ui_dropdown",
        "z": "692c798b6f9c61de",
        "name": "Input location for exit button (Button_rex_opt)",
        "label": "Input location for exit button (Button_rex_opt)",
        "tooltip": "",
        "place": "Select option",
        "group": "91a9ce4bbf4bb377",
        "order": 25,
        "width": 10,
        "height": 2,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Controller",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Button_rex_opt",
        "topicType": "str",
        "className": "dropdown_input",
        "x": 890,
        "y": 1460,
        "wires": [
            [
                "a607e57b9c8d8cdd"
            ]
        ]
    },
    {
        "id": "b60a07a5f5df2db6",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "91a9ce4bbf4bb377",
        "name": "Door Settings label",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #door_settings{\n        text-align: left;\n        color: #0094CE;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"door_settings\">\n    Door settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1730,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "c8960adebc938996",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "91a9ce4bbf4bb377",
        "name": "Lock Settings label",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #lock_settings{\n        text-align: left;\n        color: #0094CE;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"lock_settings\">\n    Lock settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1730,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "341cca91a1fdb94a",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "91a9ce4bbf4bb377",
        "name": "Button settings label",
        "order": 24,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #button_settings{\n        text-align: left;\n        color: #0094CE;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"button_settings\">\n    Button settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "2f40703481bf226e",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "91a9ce4bbf4bb377",
        "name": "Timezone settings label",
        "order": 29,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #Timezone_settings{\n        text-align: left;\n        color: #0094CE;\n        font-size: 25px;\n        font-weight: 700\n    }\n</style>\n\n\n<div id=\"Timezone_settings\">\n    Timezone settings\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1750,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "daca0544dd019614",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "GMT0",
        "payloadType": "str",
        "x": 170,
        "y": 2040,
        "wires": [
            [
                "1decd6fb7be79a57"
            ]
        ]
    },
    {
        "id": "b34c7c3825b2f296",
        "type": "ui_toast",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Ack info",
        "x": 2120,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c869c44f8db9da9",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "setDevicesIdx",
        "func": "let device_set_idxs = global.get('device_set_idxs') || {};\ndevice_set_idxs = Object.assign(device_set_idxs, { [msg.topic]: msg.payload })\nglobal.set('device_set_idxs', device_set_idxs)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "62276b0a5748fef9",
        "type": "mqtt out",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79737e067a3af084",
        "x": 2330,
        "y": 620,
        "wires": []
    },
    {
        "id": "2c9973e0b952c269",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleSetRd-Ack",
        "func": "let messageId_rd_0 = global.get(\"messageId_rd_0\")\nlet messageId_rd_1 = global.get(\"messageId_rd_1\")\n\n\n\nlet ackInfo_rd_0 = {}\nlet ackInfo_rd_1 = {}\n\nif (messageId_rd_0 === msg.payload.message_id) {\n\n    if (msg.payload.result.errorNo === 0) {\n        ackInfo_rd_0.result = \"success\"\n        ackInfo_rd_0.payload = \"Done\"\n    } else {\n        ackInfo_rd_0.result = \"error\"\n        ackInfo_rd_0.payload = \"error\"\n    }\n} else if (messageId_rd_1 === msg.payload.message_id){\n\n    if (msg.payload.result.errorNo === 0) {\n        ackInfo_rd_1.result = \"success\"\n        ackInfo_rd_1.payload = \"Done\"\n    } else {\n        ackInfo_rd_1.result = \"error\"\n        ackInfo_rd_1.payload = \"error\"\n    }\n}\n\nreturn [ackInfo_rd_0, ackInfo_rd_1]\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 460,
        "wires": [
            [
                "e063be51f1201adf"
            ],
            [
                "86a634f89955d0c9"
            ]
        ]
    },
    {
        "id": "e063be51f1201adf",
        "type": "switch",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 600,
        "wires": [
            [
                "7416ec0179370582"
            ],
            [
                "2027404e36d47db4"
            ]
        ]
    },
    {
        "id": "2027404e36d47db4",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setReader2",
        "func": "let device_set_idxs = global.get('device_set_idxs');\n\nlet userCreds = global.get('userCreds');\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\nlet msgWrapper = {}\nmsgWrapper.operator = \"SetRd\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();\nmsgWrapper.info = global.get('rd_1_set');\n\nmsgWrapper.info.Rd_idx = device_set_idxs.Rd1_idx\nmsgWrapper.info.Control_point_idx = device_set_idxs.Control_point_idx\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId_rd_1', msgWrapper.message_id)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 640,
        "wires": [
            [
                "62276b0a5748fef9"
            ]
        ]
    },
    {
        "id": "7416ec0179370582",
        "type": "ui_toast",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Ack info",
        "x": 2120,
        "y": 600,
        "wires": []
    },
    {
        "id": "86a634f89955d0c9",
        "type": "switch",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 700,
        "wires": [
            [
                "03ca1b1fdfc39f2d"
            ],
            [
                "fdf6aa2ba915be6d"
            ]
        ]
    },
    {
        "id": "03ca1b1fdfc39f2d",
        "type": "ui_toast",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Ack info",
        "x": 2120,
        "y": 680,
        "wires": []
    },
    {
        "id": "fdf6aa2ba915be6d",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setTimezone",
        "func": "let userCreds = global.get('userCreds');\n\nlet globalTopic = userCreds.location + \"/\" + userCreds.device_id + \"/\"\n\nlet msgWrapper = {}\nmsgWrapper.operator = \"SetDateTime\"\nmsgWrapper.session_id = \"0\"\nmsgWrapper.message_id = Math.floor(Math.random() * 1692797271182).toString();\nmsgWrapper.info = global.get('time_settings');\n\nmsgWrapper.info.DateTime = Date.now()\nmsgWrapper.info.GMT = 7200\nmsgWrapper.info.NTP1 = \"pool.ntp.org\"\nmsgWrapper.info.NTP2 = \"pool2.ntp.org:123\"\nmsgWrapper.info.DST_Shift = 3600\n\n\nmsg.payload = msgWrapper\nmsg.topic = globalTopic + \"Operate\" + \"/\"\n\nglobal.set('messageId', msgWrapper.message_id)\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 720,
        "wires": [
            [
                "62276b0a5748fef9"
            ]
        ]
    },
    {
        "id": "6505c8ff956b3f78",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2750,
        "y": 280,
        "wires": [
            [
                "6d7ac608b771c09f"
            ]
        ]
    },
    {
        "id": "28a1c7a16938fbb3",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Divice id",
        "label": "Divice id",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 12,
        "width": 8,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "device_id",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 1060,
        "y": 800,
        "wires": [
            [
                "33c8b93809af5d71"
            ]
        ]
    },
    {
        "id": "33c8b93809af5d71",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "setUserCreds",
        "func": "let tempUserCreds = global.get('tempUserCreds') || {};\n\ntempUserCreds = Object.assign(tempUserCreds, { [msg.topic]: msg.payload })\nglobal.set('tempUserCreds', tempUserCreds)\n\nlet obj = {}\nobj.payload = tempUserCreds\nreturn obj",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "c3a71011f5973516",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "payload.deviceAddr",
                "v": "Device address: N/A",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 870,
        "y": 560,
        "wires": [
            [
                "6ad93d3e94e2fe69"
            ]
        ]
    },
    {
        "id": "583517f12510f63c",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "payload.connectionStatus",
                "v": "MQTT: Connection OFF",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "6cc4dd7e4806e9e6"
            ]
        ]
    },
    {
        "id": "4eec54e042c9d037",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "handleSetDateTime-Ack",
        "func": "let ackInfo = {}\nlet messageId = global.get(\"messageId\")\n\n\nif (messageId === msg.payload.message_id) {\n    if (msg.payload.result.errorNo === 0) {\n        ackInfo.topic = \"Success\"\n        ackInfo.payload = \"Done\"\n\n\n    } else {\n        ackInfo.topic = \"Error\"\n        ackInfo.payload = \"error\"\n\n    }\n}\n\nreturn ackInfo;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 380,
        "wires": [
            [
                "6c8acdd459e657eb",
                "c2c2313264fe8ffb"
            ]
        ]
    },
    {
        "id": "11dce9d495d2d8b5",
        "type": "ui_template",
        "z": "692c798b6f9c61de",
        "group": "fc491a4cada0492f",
        "name": "Head section",
        "order": 43,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .text_input {\n        border: solid;\n        border-width: 3px;\n        font-size: 22px;\n        font-weight: 600;\n        padding: 20px 0 20px 0;\n\n    }\n\n    .dropdown_input {\n        border: solid;\n        border-width: 3px;\n        font-size: 22px;\n        font-weight: 600;\n    }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e819dd139f9e98f4",
        "type": "ui_button",
        "z": "692c798b6f9c61de",
        "name": "Schedule",
        "group": "fc491a4cada0492f",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Schedule",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "settings_btn",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AIR-CR_Control\",\"AIR-CR_Connection\",\"AIR-CR_Simple_settings\",\"AIR-CR_Settings\",\"AIR-CR_r0\",\"AIR-CR_r1\",\"AIR-CR_submit\"],\"show\":[\"AIR-CR_schedule\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2880,
        "y": 520,
        "wires": [
            [
                "f35f7ebd59ad5459"
            ]
        ]
    },
    {
        "id": "2c20c6b6c69caf14",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "523171b4c91e1d14",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 2220,
        "wires": [
            [
                "4c93e7718fefbcb3"
            ]
        ]
    },
    {
        "id": "c7f4ea3c6543a538",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "523171b4c91e1d14",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 2280,
        "wires": [
            [
                "59b31a431b9480d5"
            ]
        ]
    },
    {
        "id": "59b31a431b9480d5",
        "type": "debug",
        "z": "692c798b6f9c61de",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 2280,
        "wires": []
    },
    {
        "id": "4c93e7718fefbcb3",
        "type": "debug",
        "z": "692c798b6f9c61de",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 2220,
        "wires": []
    },
    {
        "id": "3880a03920b6f99c",
        "type": "ui_text_input",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "Location",
        "label": "Location",
        "tooltip": "",
        "group": "08691a1abdc449f7",
        "order": 11,
        "width": 8,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "location",
        "sendOnBlur": true,
        "className": "text_input",
        "topicType": "str",
        "x": 1060,
        "y": 740,
        "wires": [
            [
                "33c8b93809af5d71"
            ]
        ]
    },
    {
        "id": "798940211a98a110",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1001",
        "payloadType": "num",
        "x": 70,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "9f6a6ff3f354674f",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2002",
        "payloadType": "num",
        "x": 70,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "2d9c52e0ebe5b253",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2001",
        "payloadType": "num",
        "x": 70,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9c089a6faed821bd",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "persistMqttSettings",
        "func": "let mqttSettings = global.get('mqtt_settings')\nlet json = {}\njson.mqtt_settings = {}\njson.mqtt_settings.host = mqttSettings.host\njson.mqtt_settings.port = mqttSettings.port\njson.mqtt_settings.username = mqttSettings.username\njson.mqtt_settings.password = mqttSettings.password\n\nmsg.payload = json\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 360,
        "wires": [
            [
                "a854989e94536e41"
            ]
        ]
    },
    {
        "id": "a854989e94536e41",
        "type": "file",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "persistMqttSettings",
        "filename": ".lumiring/air_cr/mqttSettings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 870,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "bb1e67cbc6aec98f",
        "type": "function",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "persistDoor_settings",
        "func": "\nlet json = {}\njson.device_set_idxs = global.get('device_set_idxs')\njson.door_settings = global.get('door_settings')\njson.time_settings = global.get('dTSet')\njson.reader_1_settings = global.get('rd_0_set')\njson.reader_2_settings = global.get('rd_1_set')\n\nmsg.payload = json\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 380,
        "wires": [
            [
                "b4ff918b8b4b6bcd"
            ]
        ]
    },
    {
        "id": "b4ff918b8b4b6bcd",
        "type": "file",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "persistDoor_settings",
        "filename": ".lumiring/air_cr/door_settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2340,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c2c2313264fe8ffb",
        "type": "switch",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "property": "result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1910,
        "y": 380,
        "wires": [
            [
                "bb1e67cbc6aec98f"
            ]
        ]
    },
    {
        "id": "a60e7bd06fc144ab",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 1",
        "func": "console.log(msg)\n\n\nglobal.set('door_settings', msg.payload.door_settings)\nglobal.set('device_set_idxs', msg.payload.device_set_idxs)\nglobal.set('time_settings', msg.payload.time_settings)\nglobal.set('rd_0_set', msg.payload.reader_1_settings)\nglobal.set('rd_1_set', msg.payload.reader_2_settings)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "03faeb90bf849ef1",
        "type": "file in",
        "z": "692c798b6f9c61de",
        "name": "",
        "filename": ".lumiring/air_cr/door_settings.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "a60e7bd06fc144ab"
            ]
        ]
    },
    {
        "id": "90a7f4cb9c95b7d0",
        "type": "fs-access",
        "z": "692c798b6f9c61de",
        "name": "readDoorSettings",
        "path": ".lumiring/air_cr/door_settings.json",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "accessRead": true,
        "accessWrite": true,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "03faeb90bf849ef1"
            ],
            [
                "662967311ea5753e"
            ]
        ]
    },
    {
        "id": "edb0b7232f72600a",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "90a7f4cb9c95b7d0"
            ]
        ]
    },
    {
        "id": "d5479d55326e18b2",
        "type": "inject",
        "z": "692c798b6f9c61de",
        "g": "497324ccb7313edb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 460,
        "wires": [
            [
                "bb1e67cbc6aec98f"
            ]
        ]
    },
    {
        "id": "662967311ea5753e",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 2",
        "func": "\nglobal.set('door_settings', {\n    Door_sens_opt: 0,\n    Door_sens_idx: 0,\n    Door_sens_Condition: 0,\n    Button_rex_opt: 0,\n    Button_rex_idx: 1,\n    Button_rex_Condition: 1,\n    Lock_Relay_opt: 0,\n    Lock_Relay_idx: 0,\n    Door_Lock_mode: 0,\n    Door_Lock_type: 0,\n    Door_Lock_puls: 0.2,\n    Door_Delay: 5,\n    Door_Sens_Autolock: false\n})\nglobal.set('device_set_idxs', {\n    Control_point_idx: 1001,\n    Rd1_idx: 2002,\n    Rd0_idx: 2001\n})\nglobal.set('time_settings', {\n    DST_GMT: true,\n    tz: \"GMT0\"\n})\nglobal.set('rd_0_set', {\n    Rd_opt: 1,\n    Rd_Direction: 0,\n    Rd_Key_endian: false,\n    Rd_beep: true,\n    Rd_Wg_type: 3\n})\nglobal.set('rd_1_set', {\n    Rd_opt: 1,\n    Rd_Direction: 1,\n    Rd_Key_endian: true,\n    Rd_beep: true,\n    Rd_Wg_type: 3\n})\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b417a70c3198d0ed",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 3",
        "func": "let device_set_idxs = global.get('device_set_idxs')\nmsg.payload = device_set_idxs.Rd0_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1200,
        "wires": [
            [
                "3c691a45025ba009"
            ]
        ]
    },
    {
        "id": "3bdcb9943af21e2d",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 4",
        "func": "let device_set_idxs = global.get('device_set_idxs')\nmsg.payload = device_set_idxs.Rd1_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1240,
        "wires": [
            [
                "4d74c64a6d551fbf"
            ]
        ]
    },
    {
        "id": "3ea8d5ce08c43c52",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 5",
        "func": "let device_set_idxs = global.get('device_set_idxs')\nmsg.payload = device_set_idxs.Control_point_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1280,
        "wires": [
            [
                "5876e97090ffded2"
            ]
        ]
    },
    {
        "id": "3546195198d65dd9",
        "type": "complete",
        "z": "692c798b6f9c61de",
        "name": "",
        "scope": [
            "a60e7bd06fc144ab",
            "662967311ea5753e"
        ],
        "uncaught": false,
        "x": 250,
        "y": 1500,
        "wires": [
            [
                "b417a70c3198d0ed",
                "3bdcb9943af21e2d",
                "3ea8d5ce08c43c52",
                "081099f2b9125117",
                "0ada4d37954ca264",
                "0b438b611b9e4e71",
                "0b04359872cec0ac",
                "234a95ed4ea353eb",
                "85dc3035ed5f5a74",
                "6010b0a9f46e8715",
                "dbea2a03332b56f1",
                "f1522977cf923a4f",
                "fb853ec8a9a2aa56",
                "a6acf6655b8e75ce",
                "fae441eff2294cea",
                "b69c4fad23abed38"
            ]
        ]
    },
    {
        "id": "081099f2b9125117",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 6",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_sens_opt\nmsg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1340,
        "wires": [
            [
                "8d0f58b9725145dc"
            ]
        ]
    },
    {
        "id": "0ada4d37954ca264",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 7",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_sens_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1380,
        "wires": [
            [
                "061aecc325f2ccf3"
            ]
        ]
    },
    {
        "id": "0b438b611b9e4e71",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 8",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_sens_Condition\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1420,
        "wires": [
            [
                "84d7a118ddd9842f"
            ]
        ]
    },
    {
        "id": "0b04359872cec0ac",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 9",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Button_rex_opt\nmsg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1460,
        "wires": [
            [
                "b21a19bb0acbfa9c"
            ]
        ]
    },
    {
        "id": "234a95ed4ea353eb",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 10",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Button_rex_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1500,
        "wires": [
            [
                "b2474e59834ac54b"
            ]
        ]
    },
    {
        "id": "85dc3035ed5f5a74",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 11",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Button_rex_Condition\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "1dc6ecb687b4c702"
            ]
        ]
    },
    {
        "id": "6010b0a9f46e8715",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 12",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Lock_Relay_opt\nmsg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1580,
        "wires": [
            [
                "00ecd6dbee19221f"
            ]
        ]
    },
    {
        "id": "dbea2a03332b56f1",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 13",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Lock_Relay_idx\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1620,
        "wires": [
            [
                "9511360cabc09665"
            ]
        ]
    },
    {
        "id": "f1522977cf923a4f",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 14",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_Lock_mode\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1660,
        "wires": [
            [
                "4a42fef97bd379c2"
            ]
        ]
    },
    {
        "id": "fb853ec8a9a2aa56",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 15",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_Lock_type\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1700,
        "wires": [
            [
                "297191ec56ab0272"
            ]
        ]
    },
    {
        "id": "a6acf6655b8e75ce",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 16",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_Lock_puls\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1740,
        "wires": [
            [
                "d8697b4c53aa26a1"
            ]
        ]
    },
    {
        "id": "fae441eff2294cea",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 17",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_Delay\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1780,
        "wires": [
            [
                "d0c523e32a8ea14f"
            ]
        ]
    },
    {
        "id": "b69c4fad23abed38",
        "type": "function",
        "z": "692c798b6f9c61de",
        "name": "function 18",
        "func": "let door_settings = global.get('door_settings')\nmsg.payload = door_settings.Door_sens_Autolock\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "b083bea11642642c"
            ]
        ]
    },
    {
        "id": "1fddf0a8d296909f",
        "type": "inject",
        "z": "be9f64fbc3682d16",
        "name": "set configuration",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "ece8f4a0d519aec2"
            ]
        ]
    },
    {
        "id": "ece8f4a0d519aec2",
        "type": "file in",
        "z": "be9f64fbc3682d16",
        "name": "",
        "filename": "C:\\air_cr\\air_cr_conf.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "522050f7948dbbe1"
            ]
        ]
    },
    {
        "id": "3b8c508c929084e6",
        "type": "mqtt in",
        "z": "be9f64fbc3682d16",
        "name": "224/147/registration/15643804/",
        "topic": "224/147/registration/15643804/#",
        "qos": "0",
        "datatype": "json",
        "broker": "79737e067a3af084",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "e52a703e720e6788"
            ]
        ]
    },
    {
        "id": "522050f7948dbbe1",
        "type": "debug",
        "z": "be9f64fbc3682d16",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "70cedf33c431ae57",
        "type": "switch",
        "z": "be9f64fbc3682d16",
        "name": "conf complete message",
        "property": "payload.conf_status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 340,
        "wires": [
            [
                "6aa902310eb9139d"
            ]
        ]
    },
    {
        "id": "193f180db0be3905",
        "type": "debug",
        "z": "be9f64fbc3682d16",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 320,
        "wires": []
    },
    {
        "id": "6aa902310eb9139d",
        "type": "template",
        "z": "be9f64fbc3682d16",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "configuration status: {{payload.conf_status}}",
        "output": "str",
        "x": 880,
        "y": 340,
        "wires": [
            [
                "193f180db0be3905"
            ]
        ]
    },
    {
        "id": "34a89c8a9582d232",
        "type": "switch",
        "z": "be9f64fbc3682d16",
        "name": "event message",
        "property": "payload.operator",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Event",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 440,
        "wires": [
            [
                "86975e273f042696"
            ]
        ]
    },
    {
        "id": "fa3d016086c7c693",
        "type": "file",
        "z": "be9f64fbc3682d16",
        "name": "logging",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1520,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bca885cf7fd7a60a",
        "type": "template",
        "z": "be9f64fbc3682d16",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "[{{payload.current_time}}] group - {{payload.info.Group}}, cpoint_idx - {{payload.info.Ctp_idx}}, event id - {{payload.info.Event_id}}",
        "output": "str",
        "x": 1280,
        "y": 440,
        "wires": [
            [
                "fa3d016086c7c693",
                "309c0fedd466acbe"
            ]
        ]
    },
    {
        "id": "86975e273f042696",
        "type": "function",
        "z": "be9f64fbc3682d16",
        "name": "set filename with current date",
        "func": "\nmsg.filename = \"C:/air_cr/\" + msg.myymd + \".txt\"\nmsg.payload.current_time = msg.mytimes\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 440,
        "wires": [
            [
                "bca885cf7fd7a60a"
            ]
        ]
    },
    {
        "id": "e52a703e720e6788",
        "type": "simpletime",
        "z": "be9f64fbc3682d16",
        "name": "add time",
        "mydate": true,
        "myymd": true,
        "myyear": true,
        "mymonth": true,
        "mymonthn": true,
        "mydom": true,
        "mydoy": true,
        "myday": true,
        "myhourpm": true,
        "myhour": true,
        "mytime": true,
        "mytimes": true,
        "myminute": true,
        "myminutes": true,
        "mysecond": true,
        "mymillis": true,
        "myepoch": true,
        "myrawdate": true,
        "mypm": true,
        "x": 380,
        "y": 440,
        "wires": [
            [
                "70cedf33c431ae57",
                "34a89c8a9582d232"
            ]
        ]
    },
    {
        "id": "309c0fedd466acbe",
        "type": "debug",
        "z": "be9f64fbc3682d16",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 500,
        "wires": []
    }
]